# Before running these hooks, you will need to run the following:
#   pre-commit install --install-hooks --overwrite
#
# You can run everything in this file against the entire repository with the command:
#   pre-commit run --all-files --hook-stage manual
default_install_hook_types: ["pre-commit", "pre-push"]
repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0
    hooks:
      - id: check-ast # simply checks whether the files parse as valid python.
        stages: ["commit", "manual", "push"]

      - id: check-json # checks json files for parseable syntax.
        stages: ["manual", "push"]

      - id: check-toml # checks toml files for parseable syntax.
        stages: ["manual", "push"]

      - id: check-yaml # checks yaml files for parseable syntax.
        stages: ["manual", "push"]

      - id: detect-private-key # detects the presence of private keys.
        stages: ["manual", "push"]

      - id: end-of-file-fixer # ensures that a file is either empty, or ends with one newline.
        stages: ["commit", "manual", "push"]

      - id: requirements-txt-fixer # sorts entries in requirements.txt.
        stages: ["commit", "manual", "push"]

      - id: trailing-whitespace # trims trailing whitespace.
        stages: ["commit", "manual", "push"]

  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.4
    hooks:
      - id: bandit # Bandit is a tool for finding common security issues in Python code
        stages: ["manual", "push"]
        args: ["-c", "pyproject.toml"]
        additional_dependencies: ["bandit[toml]"]

  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.3.0
    hooks:
      - id: detect-secrets
        stages: ["manual", "push"]
        # args: ['--baseline', '.secrets.baseline']
        # exclude: package.lock.json
